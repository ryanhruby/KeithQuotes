{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar PhoneNumberList;\nvar PhoneNumberPage;\nvar PhoneNumberInstance;\nvar PhoneNumberContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n */\n\n/* jshint ignore:end */\n\nPhoneNumberList = function PhoneNumberList(version, trunkSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function phoneNumbers\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.PhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n  function PhoneNumberListInstance(sid) {\n    return PhoneNumberListInstance.get(sid);\n  }\n\n  PhoneNumberListInstance._version = version; // Path Solution\n\n  PhoneNumberListInstance._solution = {\n    trunkSid: trunkSid\n  };\n  PhoneNumberListInstance._uri = `/Trunks/${trunkSid}/PhoneNumbers`;\n  /* jshint ignore:start */\n\n  /**\n   * create a PhoneNumberInstance\n   *\n   * @function create\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumberSid -\n   *          The SID of the Incoming Phone Number that you want to associate with the trunk\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PhoneNumberInstance\n   */\n\n  /* jshint ignore:end */\n\n  PhoneNumberListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['phoneNumberSid'])) {\n      throw new Error('Required parameter \"opts[\\'phoneNumberSid\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumberSid': _.get(opts, 'phoneNumberSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new PhoneNumberInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams PhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists PhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of PhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new PhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of PhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new PhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a phone_number\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.PhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.get = function get(sid) {\n    return new PhoneNumberContext(this._version, this._solution.trunkSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PhoneNumberListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PhoneNumberSolution} solution - Path solution\n *\n * @returns PhoneNumberPage\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberPage = function PhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PhoneNumberPage.prototype, Page.prototype);\n\nPhoneNumberPage.prototype.constructor = PhoneNumberPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of PhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberPage#\n *\n * @param {PhoneNumberPayload} payload - Payload response from the API\n *\n * @returns PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new PhoneNumberInstance(this._version, payload, this._solution.trunkSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {object} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} links - The URLs of related resources\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} url - The absolute URL of the resource\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method that we use to call voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n *\n * @param {V1} version - Version of the resource\n * @param {PhoneNumberPayload} payload - The instance payload\n * @param {sid} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance = function PhoneNumberInstance(version, payload, trunkSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n\n  this.apiVersion = payload.api_version; // jshint ignore:line\n\n  this.beta = payload.beta; // jshint ignore:line\n\n  this.capabilities = payload.capabilities; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    trunkSid: trunkSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(PhoneNumberInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new PhoneNumberContext(this._version, this._solution.trunkSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nPhoneNumberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a PhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the PhoneNumber resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext = function PhoneNumberContext(version, trunkSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    trunkSid: trunkSid,\n    sid: sid\n  };\n  this._uri = `/Trunks/${trunkSid}/PhoneNumbers/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new PhoneNumberInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a PhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PhoneNumberList: PhoneNumberList,\n  PhoneNumberPage: PhoneNumberPage,\n  PhoneNumberInstance: PhoneNumberInstance,\n  PhoneNumberContext: PhoneNumberContext\n};","map":{"version":3,"sources":["/Users/vivianjacobitz/Desktop/KeithQuotes/keith-quotes-webapp/node_modules/twilio/lib/rest/trunking/v1/trunk/phoneNumber.js"],"names":["Q","require","_","util","Page","deserialize","values","PhoneNumberList","PhoneNumberPage","PhoneNumberInstance","PhoneNumberContext","version","trunkSid","PhoneNumberListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","addressRequirements","address_requirements","apiVersion","api_version","beta","capabilities","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","links","phoneNumber","phone_number","smsApplicationSid","sms_application_sid","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","statusCallback","status_callback","statusCallbackMethod","status_callback_method","trunk_sid","url","voiceApplicationSid","voice_application_sid","voiceCallerIdLookup","voice_caller_id_lookup","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceUrl","voice_url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar PhoneNumberList;\nvar PhoneNumberPage;\nvar PhoneNumberInstance;\nvar PhoneNumberContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n */\n/* jshint ignore:end */\nPhoneNumberList = function PhoneNumberList(version, trunkSid) {\n  /* jshint ignore:start */\n  /**\n   * @function phoneNumbers\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.PhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  function PhoneNumberListInstance(sid) {\n    return PhoneNumberListInstance.get(sid);\n  }\n\n  PhoneNumberListInstance._version = version;\n  // Path Solution\n  PhoneNumberListInstance._solution = {trunkSid: trunkSid};\n  PhoneNumberListInstance._uri = `/Trunks/${trunkSid}/PhoneNumbers`;\n  /* jshint ignore:start */\n  /**\n   * create a PhoneNumberInstance\n   *\n   * @function create\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumberSid -\n   *          The SID of the Incoming Phone Number that you want to associate with the trunk\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PhoneNumberInstance\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['phoneNumberSid'])) {\n      throw new Error('Required parameter \"opts[\\'phoneNumberSid\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'PhoneNumberSid': _.get(opts, 'phoneNumberSid')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new PhoneNumberInstance(\n        this._version,\n        payload,\n        this._solution.trunkSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams PhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists PhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of PhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new PhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of PhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new PhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a phone_number\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.PhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.get = function get(sid) {\n    return new PhoneNumberContext(this._version, this._solution.trunkSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  PhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PhoneNumberListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PhoneNumberSolution} solution - Path solution\n *\n * @returns PhoneNumberPage\n */\n/* jshint ignore:end */\nPhoneNumberPage = function PhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PhoneNumberPage.prototype, Page.prototype);\nPhoneNumberPage.prototype.constructor = PhoneNumberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of PhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberPage#\n *\n * @param {PhoneNumberPayload} payload - Payload response from the API\n *\n * @returns PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new PhoneNumberInstance(this._version, payload, this._solution.trunkSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {object} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} links - The URLs of related resources\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} url - The absolute URL of the resource\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method that we use to call voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n *\n * @param {V1} version - Version of the resource\n * @param {PhoneNumberPayload} payload - The instance payload\n * @param {sid} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nPhoneNumberInstance = function PhoneNumberInstance(version, payload, trunkSid,\n                                                    sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.beta = payload.beta; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trunkSid: trunkSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(PhoneNumberInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new PhoneNumberContext(this._version, this._solution.trunkSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a PhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.PhoneNumberContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the PhoneNumber resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nPhoneNumberContext = function PhoneNumberContext(version, trunkSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trunkSid: trunkSid, sid: sid, };\n  this._uri = `/Trunks/${trunkSid}/PhoneNumbers/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new PhoneNumberInstance(\n      this._version,\n      payload,\n      this._solution.trunkSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a PhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n/* jshint ignore:end */\nPhoneNumberContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.PhoneNumberContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PhoneNumberList: PhoneNumberList,\n  PhoneNumberPage: PhoneNumberPage,\n  PhoneNumberInstance: PhoneNumberInstance,\n  PhoneNumberContext: PhoneNumberContext\n};\n"]},"metadata":{},"sourceType":"script"}