{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar UsAppToPersonUsecaseList;\nvar UsAppToPersonUsecasePage;\nvar UsAppToPersonUsecaseInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonUsecaseList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonUsecaseList = function UsAppToPersonUsecaseList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function usAppToPersonUsecases\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseContext}\n   */\n\n  /* jshint ignore:end */\n  function UsAppToPersonUsecaseListInstance(sid) {\n    return UsAppToPersonUsecaseListInstance.get(sid);\n  }\n\n  UsAppToPersonUsecaseListInstance._version = version; // Path Solution\n\n  UsAppToPersonUsecaseListInstance._solution = {\n    messagingServiceSid: messagingServiceSid\n  };\n  UsAppToPersonUsecaseListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p/Usecases`;\n  /* jshint ignore:start */\n\n  /**\n   * fetch a UsAppToPersonUsecaseInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.brandRegistrationSid] - A2P Brand Registration SID\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonUsecaseInstance\n   */\n\n  /* jshint ignore:end */\n\n  UsAppToPersonUsecaseListInstance.fetch = function fetch(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid')\n    });\n\n    var promise = this._version.fetch({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonUsecaseInstance(this._version, payload, this._solution.messagingServiceSid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonUsecaseListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonUsecaseListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonUsecaseListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonUsecasePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecasePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonUsecaseSolution} solution - Path solution\n *\n * @returns UsAppToPersonUsecasePage\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonUsecasePage = function UsAppToPersonUsecasePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonUsecasePage.prototype, Page.prototype);\n\nUsAppToPersonUsecasePage.prototype.constructor = UsAppToPersonUsecasePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UsAppToPersonUsecaseInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecasePage#\n *\n * @param {UsAppToPersonUsecasePayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonUsecaseInstance\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonUsecasePage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonUsecaseInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecasePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonUsecasePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsAppToPersonUsecasePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonUsecaseContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseInstance\n *\n * @property {object} usAppToPersonUsecases - Human readable A2P Use Case details\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonUsecasePayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonUsecaseInstance = function UsAppToPersonUsecaseInstance(version, payload, messagingServiceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.usAppToPersonUsecases = payload.us_app_to_person_usecases; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    messagingServiceSid: messagingServiceSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonUsecaseInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsAppToPersonUsecaseInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonUsecaseList: UsAppToPersonUsecaseList,\n  UsAppToPersonUsecasePage: UsAppToPersonUsecasePage,\n  UsAppToPersonUsecaseInstance: UsAppToPersonUsecaseInstance\n};","map":{"version":3,"sources":["/Users/vivianjacobitz/Desktop/KeithQuotes/keith-quotes-webapp/node_modules/twilio/lib/rest/messaging/v1/service/usAppToPersonUsecase.js"],"names":["Q","require","_","util","Page","values","UsAppToPersonUsecaseList","UsAppToPersonUsecasePage","UsAppToPersonUsecaseInstance","version","messagingServiceSid","UsAppToPersonUsecaseListInstance","sid","get","_version","_solution","_uri","fetch","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","params","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","usAppToPersonUsecases","us_app_to_person_usecases","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar UsAppToPersonUsecaseList;\nvar UsAppToPersonUsecasePage;\nvar UsAppToPersonUsecaseInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonUsecaseList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The unique string that identifies the resource\n */\n/* jshint ignore:end */\nUsAppToPersonUsecaseList = function UsAppToPersonUsecaseList(version,\n    messagingServiceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function usAppToPersonUsecases\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseContext}\n   */\n  /* jshint ignore:end */\n  function UsAppToPersonUsecaseListInstance(sid) {\n    return UsAppToPersonUsecaseListInstance.get(sid);\n  }\n\n  UsAppToPersonUsecaseListInstance._version = version;\n  // Path Solution\n  UsAppToPersonUsecaseListInstance._solution = {messagingServiceSid: messagingServiceSid};\n  UsAppToPersonUsecaseListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p/Usecases`;\n  /* jshint ignore:start */\n  /**\n   * fetch a UsAppToPersonUsecaseInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.brandRegistrationSid] - A2P Brand Registration SID\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonUsecaseInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonUsecaseListInstance.fetch = function fetch(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid')});\n\n    var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonUsecaseInstance(\n        this._version,\n        payload,\n        this._solution.messagingServiceSid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsAppToPersonUsecaseListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonUsecaseListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonUsecaseListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonUsecasePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecasePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonUsecaseSolution} solution - Path solution\n *\n * @returns UsAppToPersonUsecasePage\n */\n/* jshint ignore:end */\nUsAppToPersonUsecasePage = function UsAppToPersonUsecasePage(version, response,\n    solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonUsecasePage.prototype, Page.prototype);\nUsAppToPersonUsecasePage.prototype.constructor = UsAppToPersonUsecasePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsAppToPersonUsecaseInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecasePage#\n *\n * @param {UsAppToPersonUsecasePayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonUsecaseInstance\n */\n/* jshint ignore:end */\nUsAppToPersonUsecasePage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonUsecaseInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecasePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonUsecasePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonUsecasePage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonUsecaseContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseInstance\n *\n * @property {object} usAppToPersonUsecases - Human readable A2P Use Case details\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonUsecasePayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The unique string that identifies the resource\n */\n/* jshint ignore:end */\nUsAppToPersonUsecaseInstance = function UsAppToPersonUsecaseInstance(version,\n    payload, messagingServiceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.usAppToPersonUsecases = payload.us_app_to_person_usecases; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {messagingServiceSid: messagingServiceSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonUsecaseInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonUsecaseInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonUsecaseInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonUsecaseList: UsAppToPersonUsecaseList,\n  UsAppToPersonUsecasePage: UsAppToPersonUsecasePage,\n  UsAppToPersonUsecaseInstance: UsAppToPersonUsecaseInstance\n};\n"]},"metadata":{},"sourceType":"script"}