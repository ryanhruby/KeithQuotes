{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar SettingList;\nvar SettingPage;\nvar SettingInstance;\nvar SettingContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the SettingList\n *\n * @constructor Twilio.Insights.V1.SettingList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nSettingList = function SettingList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function settings\n   * @memberof Twilio.Insights.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.SettingContext}\n   */\n\n  /* jshint ignore:end */\n  function SettingListInstance(sid) {\n    return SettingListInstance.get(sid);\n  }\n\n  SettingListInstance._version = version; // Path Solution\n\n  SettingListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a setting\n   *\n   * @function get\n   * @memberof Twilio.Insights.V1.SettingList#\n   *\n   * @returns {Twilio.Insights.V1.SettingContext}\n   */\n\n  /* jshint ignore:end */\n\n  SettingListInstance.get = function get() {\n    return new SettingContext(this._version);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.SettingList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SettingListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SettingListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SettingListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SettingPage\n *\n * @constructor Twilio.Insights.V1.SettingPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SettingSolution} solution - Path solution\n *\n * @returns SettingPage\n */\n\n/* jshint ignore:end */\n\n\nSettingPage = function SettingPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SettingPage.prototype, Page.prototype);\n\nSettingPage.prototype.constructor = SettingPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SettingInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.SettingPage#\n *\n * @param {SettingPayload} payload - Payload response from the API\n *\n * @returns SettingInstance\n */\n\n/* jshint ignore:end */\n\nSettingPage.prototype.getInstance = function getInstance(payload) {\n  return new SettingInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.SettingPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSettingPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSettingPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SettingContext\n *\n * @constructor Twilio.Insights.V1.SettingInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {boolean} advancedFeatures - The advanced_features\n * @property {boolean} voiceTrace - The voice_trace\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {SettingPayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nSettingInstance = function SettingInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.advancedFeatures = payload.advanced_features; // jshint ignore:line\n\n  this.voiceTrace = payload.voice_trace; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(SettingInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SettingContext(this._version);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a SettingInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.SettingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n\n/* jshint ignore:end */\n\nSettingInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a SettingInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.SettingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.advancedFeatures] - The advanced_features\n * @param {boolean} [opts.voiceTrace] - The voice_trace\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n\n/* jshint ignore:end */\n\n\nSettingInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.SettingInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSettingInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSettingInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SettingContext\n *\n * @constructor Twilio.Insights.V1.SettingContext\n *\n * @param {V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\n\nSettingContext = function SettingContext(version) {\n  this._version = version; // Path Solution\n\n  this._solution = {};\n  this._uri = `/Voice/Settings`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a SettingInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.SettingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n\n/* jshint ignore:end */\n\n\nSettingContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'SubaccountSid': _.get(opts, 'subaccountSid')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SettingInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a SettingInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.SettingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.advancedFeatures] - The advanced_features\n * @param {boolean} [opts.voiceTrace] - The voice_trace\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n\n/* jshint ignore:end */\n\n\nSettingContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'AdvancedFeatures': serialize.bool(_.get(opts, 'advancedFeatures')),\n    'VoiceTrace': serialize.bool(_.get(opts, 'voiceTrace')),\n    'SubaccountSid': _.get(opts, 'subaccountSid')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SettingInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.SettingContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSettingContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSettingContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SettingList: SettingList,\n  SettingPage: SettingPage,\n  SettingInstance: SettingInstance,\n  SettingContext: SettingContext\n};","map":{"version":3,"sources":["/Users/vivianjacobitz/Desktop/KeithQuotes/keith-quotes-webapp/node_modules/twilio/lib/rest/insights/v1/setting.js"],"names":["Q","require","_","util","Page","serialize","values","SettingList","SettingPage","SettingInstance","SettingContext","version","SettingListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","advancedFeatures","advanced_features","voiceTrace","voice_trace","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","update","_uri","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","bool","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar SettingList;\nvar SettingPage;\nvar SettingInstance;\nvar SettingContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SettingList\n *\n * @constructor Twilio.Insights.V1.SettingList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nSettingList = function SettingList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function settings\n   * @memberof Twilio.Insights.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.SettingContext}\n   */\n  /* jshint ignore:end */\n  function SettingListInstance(sid) {\n    return SettingListInstance.get(sid);\n  }\n\n  SettingListInstance._version = version;\n  // Path Solution\n  SettingListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a setting\n   *\n   * @function get\n   * @memberof Twilio.Insights.V1.SettingList#\n   *\n   * @returns {Twilio.Insights.V1.SettingContext}\n   */\n  /* jshint ignore:end */\n  SettingListInstance.get = function get() {\n    return new SettingContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.SettingList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SettingListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SettingListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SettingListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SettingPage\n *\n * @constructor Twilio.Insights.V1.SettingPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SettingSolution} solution - Path solution\n *\n * @returns SettingPage\n */\n/* jshint ignore:end */\nSettingPage = function SettingPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SettingPage.prototype, Page.prototype);\nSettingPage.prototype.constructor = SettingPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SettingInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.SettingPage#\n *\n * @param {SettingPayload} payload - Payload response from the API\n *\n * @returns SettingInstance\n */\n/* jshint ignore:end */\nSettingPage.prototype.getInstance = function getInstance(payload) {\n  return new SettingInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.SettingPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSettingPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSettingPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SettingContext\n *\n * @constructor Twilio.Insights.V1.SettingInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {boolean} advancedFeatures - The advanced_features\n * @property {boolean} voiceTrace - The voice_trace\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {SettingPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nSettingInstance = function SettingInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.advancedFeatures = payload.advanced_features; // jshint ignore:line\n  this.voiceTrace = payload.voice_trace; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(SettingInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SettingContext(this._version);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SettingInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.SettingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n/* jshint ignore:end */\nSettingInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SettingInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.SettingInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.advancedFeatures] - The advanced_features\n * @param {boolean} [opts.voiceTrace] - The voice_trace\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n/* jshint ignore:end */\nSettingInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.SettingInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSettingInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSettingInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SettingContext\n *\n * @constructor Twilio.Insights.V1.SettingContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nSettingContext = function SettingContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = `/Voice/Settings`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SettingInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.SettingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n/* jshint ignore:end */\nSettingContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'SubaccountSid': _.get(opts, 'subaccountSid')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SettingInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SettingInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.SettingContext#\n *\n * @param {object} [opts] - Options for request\n * @param {boolean} [opts.advancedFeatures] - The advanced_features\n * @param {boolean} [opts.voiceTrace] - The voice_trace\n * @param {string} [opts.subaccountSid] - The subaccount_sid\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SettingInstance\n */\n/* jshint ignore:end */\nSettingContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'AdvancedFeatures': serialize.bool(_.get(opts, 'advancedFeatures')),\n    'VoiceTrace': serialize.bool(_.get(opts, 'voiceTrace')),\n    'SubaccountSid': _.get(opts, 'subaccountSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SettingInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.SettingContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSettingContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSettingContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SettingList: SettingList,\n  SettingPage: SettingPage,\n  SettingInstance: SettingInstance,\n  SettingContext: SettingContext\n};\n"]},"metadata":{},"sourceType":"script"}