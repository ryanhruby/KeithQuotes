{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar ChannelList = require('./service/channel').ChannelList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar RoleList = require('./service/role').RoleList;\n\nvar UserList = require('./service/user').UserList;\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar ServiceList;\nvar ServicePage;\nvar ServiceInstance;\nvar ServiceContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the ServiceList\n *\n * @constructor Twilio.IpMessaging.V1.ServiceList\n *\n * @param {Twilio.IpMessaging.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nServiceList = function ServiceList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function services\n   * @memberof Twilio.IpMessaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.IpMessaging.V1.ServiceContext}\n   */\n\n  /* jshint ignore:end */\n  function ServiceListInstance(sid) {\n    return ServiceListInstance.get(sid);\n  }\n\n  ServiceListInstance._version = version; // Path Solution\n\n  ServiceListInstance._solution = {};\n  ServiceListInstance._uri = `/Services`;\n  /* jshint ignore:start */\n\n  /**\n   * create a ServiceInstance\n   *\n   * @function create\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - The friendly_name\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ServiceInstance\n   */\n\n  /* jshint ignore:end */\n\n  ServiceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams ServiceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  ServiceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists ServiceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ServiceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ServiceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ServiceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a service\n   *\n   * @function get\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.IpMessaging.V1.ServiceContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  ServiceListInstance.get = function get(sid) {\n    return new ServiceContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ServiceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ServiceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ServiceListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ServicePage\n *\n * @constructor Twilio.IpMessaging.V1.ServicePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ServiceSolution} solution - Path solution\n *\n * @returns ServicePage\n */\n\n/* jshint ignore:end */\n\n\nServicePage = function ServicePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ServicePage.prototype, Page.prototype);\n\nServicePage.prototype.constructor = ServicePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ServiceInstance\n *\n * @function getInstance\n * @memberof Twilio.IpMessaging.V1.ServicePage#\n *\n * @param {ServicePayload} payload - Payload response from the API\n *\n * @returns ServiceInstance\n */\n\n/* jshint ignore:end */\n\nServicePage.prototype.getInstance = function getInstance(payload) {\n  return new ServiceInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.IpMessaging.V1.ServicePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nServicePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nServicePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ServiceContext\n *\n * @constructor Twilio.IpMessaging.V1.ServiceInstance\n *\n * @property {string} sid - The sid\n * @property {string} accountSid - The account_sid\n * @property {string} friendlyName - The friendly_name\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} defaultServiceRoleSid - The default_service_role_sid\n * @property {string} defaultChannelRoleSid - The default_channel_role_sid\n * @property {string} defaultChannelCreatorRoleSid -\n *          The default_channel_creator_role_sid\n * @property {boolean} readStatusEnabled - The read_status_enabled\n * @property {boolean} reachabilityEnabled - The reachability_enabled\n * @property {number} typingIndicatorTimeout - The typing_indicator_timeout\n * @property {number} consumptionReportInterval - The consumption_report_interval\n * @property {object} limits - The limits\n * @property {object} webhooks - The webhooks\n * @property {string} preWebhookUrl - The pre_webhook_url\n * @property {string} postWebhookUrl - The post_webhook_url\n * @property {string} webhookMethod - The webhook_method\n * @property {string} webhookFilters - The webhook_filters\n * @property {object} notifications - The notifications\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {ServicePayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance = function ServiceInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.defaultServiceRoleSid = payload.default_service_role_sid; // jshint ignore:line\n\n  this.defaultChannelRoleSid = payload.default_channel_role_sid; // jshint ignore:line\n\n  this.defaultChannelCreatorRoleSid = payload.default_channel_creator_role_sid; // jshint ignore:line\n\n  this.readStatusEnabled = payload.read_status_enabled; // jshint ignore:line\n\n  this.reachabilityEnabled = payload.reachability_enabled; // jshint ignore:line\n\n  this.typingIndicatorTimeout = deserialize.integer(payload.typing_indicator_timeout); // jshint ignore:line\n\n  this.consumptionReportInterval = deserialize.integer(payload.consumption_report_interval); // jshint ignore:line\n\n  this.limits = payload.limits; // jshint ignore:line\n\n  this.webhooks = payload.webhooks; // jshint ignore:line\n\n  this.preWebhookUrl = payload.pre_webhook_url; // jshint ignore:line\n\n  this.postWebhookUrl = payload.post_webhook_url; // jshint ignore:line\n\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n\n  this.webhookFilters = payload.webhook_filters; // jshint ignore:line\n\n  this.notifications = payload.notifications; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(ServiceInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ServiceContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n\n/* jshint ignore:end */\n\nServiceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.defaultServiceRoleSid] - The default_service_role_sid\n * @param {string} [opts.defaultChannelRoleSid] - The default_channel_role_sid\n * @param {string} [opts.defaultChannelCreatorRoleSid] -\n *          The default_channel_creator_role_sid\n * @param {boolean} [opts.readStatusEnabled] - The read_status_enabled\n * @param {boolean} [opts.reachabilityEnabled] - The reachability_enabled\n * @param {number} [opts.typingIndicatorTimeout] - The typing_indicator_timeout\n * @param {number} [opts.consumptionReportInterval] -\n *          The consumption_report_interval\n * @param {boolean} [opts.notifications.newMessage.enabled] -\n *          The notifications.new_message.enabled\n * @param {string} [opts.notifications.newMessage.template] -\n *          The notifications.new_message.template\n * @param {boolean} [opts.notifications.addedToChannel.enabled] -\n *          The notifications.added_to_channel.enabled\n * @param {string} [opts.notifications.addedToChannel.template] -\n *          The notifications.added_to_channel.template\n * @param {boolean} [opts.notifications.removedFromChannel.enabled] -\n *          The notifications.removed_from_channel.enabled\n * @param {string} [opts.notifications.removedFromChannel.template] -\n *          The notifications.removed_from_channel.template\n * @param {boolean} [opts.notifications.invitedToChannel.enabled] -\n *          The notifications.invited_to_channel.enabled\n * @param {string} [opts.notifications.invitedToChannel.template] -\n *          The notifications.invited_to_channel.template\n * @param {string} [opts.preWebhookUrl] - The pre_webhook_url\n * @param {string} [opts.postWebhookUrl] - The post_webhook_url\n * @param {string} [opts.webhookMethod] - The webhook_method\n * @param {string|list} [opts.webhookFilters] - The webhook_filters\n * @param {string} [opts.webhooks.onMessageSend.url] -\n *          The webhooks.on_message_send.url\n * @param {string} [opts.webhooks.onMessageSend.method] -\n *          The webhooks.on_message_send.method\n * @param {string} [opts.webhooks.onMessageUpdate.url] -\n *          The webhooks.on_message_update.url\n * @param {string} [opts.webhooks.onMessageUpdate.method] -\n *          The webhooks.on_message_update.method\n * @param {string} [opts.webhooks.onMessageRemove.url] -\n *          The webhooks.on_message_remove.url\n * @param {string} [opts.webhooks.onMessageRemove.method] -\n *          The webhooks.on_message_remove.method\n * @param {string} [opts.webhooks.onChannelAdd.url] -\n *          The webhooks.on_channel_add.url\n * @param {string} [opts.webhooks.onChannelAdd.method] -\n *          The webhooks.on_channel_add.method\n * @param {string} [opts.webhooks.onChannelDestroy.url] -\n *          The webhooks.on_channel_destroy.url\n * @param {string} [opts.webhooks.onChannelDestroy.method] -\n *          The webhooks.on_channel_destroy.method\n * @param {string} [opts.webhooks.onChannelUpdate.url] -\n *          The webhooks.on_channel_update.url\n * @param {string} [opts.webhooks.onChannelUpdate.method] -\n *          The webhooks.on_channel_update.method\n * @param {string} [opts.webhooks.onMemberAdd.url] - The webhooks.on_member_add.url\n * @param {string} [opts.webhooks.onMemberAdd.method] -\n *          The webhooks.on_member_add.method\n * @param {string} [opts.webhooks.onMemberRemove.url] -\n *          The webhooks.on_member_remove.url\n * @param {string} [opts.webhooks.onMemberRemove.method] -\n *          The webhooks.on_member_remove.method\n * @param {string} [opts.webhooks.onMessageSent.url] -\n *          The webhooks.on_message_sent.url\n * @param {string} [opts.webhooks.onMessageSent.method] -\n *          The webhooks.on_message_sent.method\n * @param {string} [opts.webhooks.onMessageUpdated.url] -\n *          The webhooks.on_message_updated.url\n * @param {string} [opts.webhooks.onMessageUpdated.method] -\n *          The webhooks.on_message_updated.method\n * @param {string} [opts.webhooks.onMessageRemoved.url] -\n *          The webhooks.on_message_removed.url\n * @param {string} [opts.webhooks.onMessageRemoved.method] -\n *          The webhooks.on_message_removed.method\n * @param {string} [opts.webhooks.onChannelAdded.url] -\n *          The webhooks.on_channel_added.url\n * @param {string} [opts.webhooks.onChannelAdded.method] -\n *          The webhooks.on_channel_added.method\n * @param {string} [opts.webhooks.onChannelDestroyed.url] -\n *          The webhooks.on_channel_destroyed.url\n * @param {string} [opts.webhooks.onChannelDestroyed.method] -\n *          The webhooks.on_channel_destroyed.method\n * @param {string} [opts.webhooks.onChannelUpdated.url] -\n *          The webhooks.on_channel_updated.url\n * @param {string} [opts.webhooks.onChannelUpdated.method] -\n *          The webhooks.on_channel_updated.method\n * @param {string} [opts.webhooks.onMemberAdded.url] -\n *          The webhooks.on_member_added.url\n * @param {string} [opts.webhooks.onMemberAdded.method] -\n *          The webhooks.on_member_added.method\n * @param {string} [opts.webhooks.onMemberRemoved.url] -\n *          The webhooks.on_member_removed.url\n * @param {string} [opts.webhooks.onMemberRemoved.method] -\n *          The webhooks.on_member_removed.method\n * @param {number} [opts.limits.channelMembers] - The limits.channel_members\n * @param {number} [opts.limits.userChannels] - The limits.user_channels\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the channels\n *\n * @function channels\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns {Twilio.IpMessaging.V1.ServiceContext.ChannelList}\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance.prototype.channels = function channels() {\n  return this._proxy.channels;\n};\n/* jshint ignore:start */\n\n/**\n * Access the roles\n *\n * @function roles\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns {Twilio.IpMessaging.V1.ServiceContext.RoleList}\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance.prototype.roles = function roles() {\n  return this._proxy.roles;\n};\n/* jshint ignore:start */\n\n/**\n * Access the users\n *\n * @function users\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns {Twilio.IpMessaging.V1.ServiceContext.UserList}\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance.prototype.users = function users() {\n  return this._proxy.users;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nServiceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nServiceInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ServiceContext\n *\n * @constructor Twilio.IpMessaging.V1.ServiceContext\n *\n * @property {Twilio.IpMessaging.V1.ServiceContext.ChannelList} channels -\n *          channels resource\n * @property {Twilio.IpMessaging.V1.ServiceContext.RoleList} roles - roles resource\n * @property {Twilio.IpMessaging.V1.ServiceContext.UserList} users - users resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nServiceContext = function ServiceContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Services/${sid}`; // Dependents\n\n  this._channels = undefined;\n  this._roles = undefined;\n  this._users = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n\n/* jshint ignore:end */\n\n\nServiceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n\n/* jshint ignore:end */\n\n\nServiceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.defaultServiceRoleSid] - The default_service_role_sid\n * @param {string} [opts.defaultChannelRoleSid] - The default_channel_role_sid\n * @param {string} [opts.defaultChannelCreatorRoleSid] -\n *          The default_channel_creator_role_sid\n * @param {boolean} [opts.readStatusEnabled] - The read_status_enabled\n * @param {boolean} [opts.reachabilityEnabled] - The reachability_enabled\n * @param {number} [opts.typingIndicatorTimeout] - The typing_indicator_timeout\n * @param {number} [opts.consumptionReportInterval] -\n *          The consumption_report_interval\n * @param {boolean} [opts.notifications.newMessage.enabled] -\n *          The notifications.new_message.enabled\n * @param {string} [opts.notifications.newMessage.template] -\n *          The notifications.new_message.template\n * @param {boolean} [opts.notifications.addedToChannel.enabled] -\n *          The notifications.added_to_channel.enabled\n * @param {string} [opts.notifications.addedToChannel.template] -\n *          The notifications.added_to_channel.template\n * @param {boolean} [opts.notifications.removedFromChannel.enabled] -\n *          The notifications.removed_from_channel.enabled\n * @param {string} [opts.notifications.removedFromChannel.template] -\n *          The notifications.removed_from_channel.template\n * @param {boolean} [opts.notifications.invitedToChannel.enabled] -\n *          The notifications.invited_to_channel.enabled\n * @param {string} [opts.notifications.invitedToChannel.template] -\n *          The notifications.invited_to_channel.template\n * @param {string} [opts.preWebhookUrl] - The pre_webhook_url\n * @param {string} [opts.postWebhookUrl] - The post_webhook_url\n * @param {string} [opts.webhookMethod] - The webhook_method\n * @param {string|list} [opts.webhookFilters] - The webhook_filters\n * @param {string} [opts.webhooks.onMessageSend.url] -\n *          The webhooks.on_message_send.url\n * @param {string} [opts.webhooks.onMessageSend.method] -\n *          The webhooks.on_message_send.method\n * @param {string} [opts.webhooks.onMessageUpdate.url] -\n *          The webhooks.on_message_update.url\n * @param {string} [opts.webhooks.onMessageUpdate.method] -\n *          The webhooks.on_message_update.method\n * @param {string} [opts.webhooks.onMessageRemove.url] -\n *          The webhooks.on_message_remove.url\n * @param {string} [opts.webhooks.onMessageRemove.method] -\n *          The webhooks.on_message_remove.method\n * @param {string} [opts.webhooks.onChannelAdd.url] -\n *          The webhooks.on_channel_add.url\n * @param {string} [opts.webhooks.onChannelAdd.method] -\n *          The webhooks.on_channel_add.method\n * @param {string} [opts.webhooks.onChannelDestroy.url] -\n *          The webhooks.on_channel_destroy.url\n * @param {string} [opts.webhooks.onChannelDestroy.method] -\n *          The webhooks.on_channel_destroy.method\n * @param {string} [opts.webhooks.onChannelUpdate.url] -\n *          The webhooks.on_channel_update.url\n * @param {string} [opts.webhooks.onChannelUpdate.method] -\n *          The webhooks.on_channel_update.method\n * @param {string} [opts.webhooks.onMemberAdd.url] - The webhooks.on_member_add.url\n * @param {string} [opts.webhooks.onMemberAdd.method] -\n *          The webhooks.on_member_add.method\n * @param {string} [opts.webhooks.onMemberRemove.url] -\n *          The webhooks.on_member_remove.url\n * @param {string} [opts.webhooks.onMemberRemove.method] -\n *          The webhooks.on_member_remove.method\n * @param {string} [opts.webhooks.onMessageSent.url] -\n *          The webhooks.on_message_sent.url\n * @param {string} [opts.webhooks.onMessageSent.method] -\n *          The webhooks.on_message_sent.method\n * @param {string} [opts.webhooks.onMessageUpdated.url] -\n *          The webhooks.on_message_updated.url\n * @param {string} [opts.webhooks.onMessageUpdated.method] -\n *          The webhooks.on_message_updated.method\n * @param {string} [opts.webhooks.onMessageRemoved.url] -\n *          The webhooks.on_message_removed.url\n * @param {string} [opts.webhooks.onMessageRemoved.method] -\n *          The webhooks.on_message_removed.method\n * @param {string} [opts.webhooks.onChannelAdded.url] -\n *          The webhooks.on_channel_added.url\n * @param {string} [opts.webhooks.onChannelAdded.method] -\n *          The webhooks.on_channel_added.method\n * @param {string} [opts.webhooks.onChannelDestroyed.url] -\n *          The webhooks.on_channel_destroyed.url\n * @param {string} [opts.webhooks.onChannelDestroyed.method] -\n *          The webhooks.on_channel_destroyed.method\n * @param {string} [opts.webhooks.onChannelUpdated.url] -\n *          The webhooks.on_channel_updated.url\n * @param {string} [opts.webhooks.onChannelUpdated.method] -\n *          The webhooks.on_channel_updated.method\n * @param {string} [opts.webhooks.onMemberAdded.url] -\n *          The webhooks.on_member_added.url\n * @param {string} [opts.webhooks.onMemberAdded.method] -\n *          The webhooks.on_member_added.method\n * @param {string} [opts.webhooks.onMemberRemoved.url] -\n *          The webhooks.on_member_removed.url\n * @param {string} [opts.webhooks.onMemberRemoved.method] -\n *          The webhooks.on_member_removed.method\n * @param {number} [opts.limits.channelMembers] - The limits.channel_members\n * @param {number} [opts.limits.userChannels] - The limits.user_channels\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n\n/* jshint ignore:end */\n\n\nServiceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'DefaultServiceRoleSid': _.get(opts, 'defaultServiceRoleSid'),\n    'DefaultChannelRoleSid': _.get(opts, 'defaultChannelRoleSid'),\n    'DefaultChannelCreatorRoleSid': _.get(opts, 'defaultChannelCreatorRoleSid'),\n    'ReadStatusEnabled': serialize.bool(_.get(opts, 'readStatusEnabled')),\n    'ReachabilityEnabled': serialize.bool(_.get(opts, 'reachabilityEnabled')),\n    'TypingIndicatorTimeout': _.get(opts, 'typingIndicatorTimeout'),\n    'ConsumptionReportInterval': _.get(opts, 'consumptionReportInterval'),\n    'Notifications.NewMessage.Enabled': serialize.bool(_.get(opts, 'notifications.newMessage.enabled')),\n    'Notifications.NewMessage.Template': _.get(opts, 'notifications.newMessage.template'),\n    'Notifications.AddedToChannel.Enabled': serialize.bool(_.get(opts, 'notifications.addedToChannel.enabled')),\n    'Notifications.AddedToChannel.Template': _.get(opts, 'notifications.addedToChannel.template'),\n    'Notifications.RemovedFromChannel.Enabled': serialize.bool(_.get(opts, 'notifications.removedFromChannel.enabled')),\n    'Notifications.RemovedFromChannel.Template': _.get(opts, 'notifications.removedFromChannel.template'),\n    'Notifications.InvitedToChannel.Enabled': serialize.bool(_.get(opts, 'notifications.invitedToChannel.enabled')),\n    'Notifications.InvitedToChannel.Template': _.get(opts, 'notifications.invitedToChannel.template'),\n    'PreWebhookUrl': _.get(opts, 'preWebhookUrl'),\n    'PostWebhookUrl': _.get(opts, 'postWebhookUrl'),\n    'WebhookMethod': _.get(opts, 'webhookMethod'),\n    'WebhookFilters': serialize.map(_.get(opts, 'webhookFilters'), function (e) {\n      return e;\n    }),\n    'Webhooks.OnMessageSend.Url': _.get(opts, 'webhooks.onMessageSend.url'),\n    'Webhooks.OnMessageSend.Method': _.get(opts, 'webhooks.onMessageSend.method'),\n    'Webhooks.OnMessageUpdate.Url': _.get(opts, 'webhooks.onMessageUpdate.url'),\n    'Webhooks.OnMessageUpdate.Method': _.get(opts, 'webhooks.onMessageUpdate.method'),\n    'Webhooks.OnMessageRemove.Url': _.get(opts, 'webhooks.onMessageRemove.url'),\n    'Webhooks.OnMessageRemove.Method': _.get(opts, 'webhooks.onMessageRemove.method'),\n    'Webhooks.OnChannelAdd.Url': _.get(opts, 'webhooks.onChannelAdd.url'),\n    'Webhooks.OnChannelAdd.Method': _.get(opts, 'webhooks.onChannelAdd.method'),\n    'Webhooks.OnChannelDestroy.Url': _.get(opts, 'webhooks.onChannelDestroy.url'),\n    'Webhooks.OnChannelDestroy.Method': _.get(opts, 'webhooks.onChannelDestroy.method'),\n    'Webhooks.OnChannelUpdate.Url': _.get(opts, 'webhooks.onChannelUpdate.url'),\n    'Webhooks.OnChannelUpdate.Method': _.get(opts, 'webhooks.onChannelUpdate.method'),\n    'Webhooks.OnMemberAdd.Url': _.get(opts, 'webhooks.onMemberAdd.url'),\n    'Webhooks.OnMemberAdd.Method': _.get(opts, 'webhooks.onMemberAdd.method'),\n    'Webhooks.OnMemberRemove.Url': _.get(opts, 'webhooks.onMemberRemove.url'),\n    'Webhooks.OnMemberRemove.Method': _.get(opts, 'webhooks.onMemberRemove.method'),\n    'Webhooks.OnMessageSent.Url': _.get(opts, 'webhooks.onMessageSent.url'),\n    'Webhooks.OnMessageSent.Method': _.get(opts, 'webhooks.onMessageSent.method'),\n    'Webhooks.OnMessageUpdated.Url': _.get(opts, 'webhooks.onMessageUpdated.url'),\n    'Webhooks.OnMessageUpdated.Method': _.get(opts, 'webhooks.onMessageUpdated.method'),\n    'Webhooks.OnMessageRemoved.Url': _.get(opts, 'webhooks.onMessageRemoved.url'),\n    'Webhooks.OnMessageRemoved.Method': _.get(opts, 'webhooks.onMessageRemoved.method'),\n    'Webhooks.OnChannelAdded.Url': _.get(opts, 'webhooks.onChannelAdded.url'),\n    'Webhooks.OnChannelAdded.Method': _.get(opts, 'webhooks.onChannelAdded.method'),\n    'Webhooks.OnChannelDestroyed.Url': _.get(opts, 'webhooks.onChannelDestroyed.url'),\n    'Webhooks.OnChannelDestroyed.Method': _.get(opts, 'webhooks.onChannelDestroyed.method'),\n    'Webhooks.OnChannelUpdated.Url': _.get(opts, 'webhooks.onChannelUpdated.url'),\n    'Webhooks.OnChannelUpdated.Method': _.get(opts, 'webhooks.onChannelUpdated.method'),\n    'Webhooks.OnMemberAdded.Url': _.get(opts, 'webhooks.onMemberAdded.url'),\n    'Webhooks.OnMemberAdded.Method': _.get(opts, 'webhooks.onMemberAdded.method'),\n    'Webhooks.OnMemberRemoved.Url': _.get(opts, 'webhooks.onMemberRemoved.url'),\n    'Webhooks.OnMemberRemoved.Method': _.get(opts, 'webhooks.onMemberRemoved.method'),\n    'Limits.ChannelMembers': _.get(opts, 'limits.channelMembers'),\n    'Limits.UserChannels': _.get(opts, 'limits.userChannels')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(ServiceContext.prototype, 'channels', {\n  get: function () {\n    if (!this._channels) {\n      this._channels = new ChannelList(this._version, this._solution.sid);\n    }\n\n    return this._channels;\n  }\n});\nObject.defineProperty(ServiceContext.prototype, 'roles', {\n  get: function () {\n    if (!this._roles) {\n      this._roles = new RoleList(this._version, this._solution.sid);\n    }\n\n    return this._roles;\n  }\n});\nObject.defineProperty(ServiceContext.prototype, 'users', {\n  get: function () {\n    if (!this._users) {\n      this._users = new UserList(this._version, this._solution.sid);\n    }\n\n    return this._users;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nServiceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nServiceContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ServiceList: ServiceList,\n  ServicePage: ServicePage,\n  ServiceInstance: ServiceInstance,\n  ServiceContext: ServiceContext\n};","map":{"version":3,"sources":["/Users/vivianjacobitz/Desktop/KeithQuotes/keith-quotes-webapp/node_modules/twilio/lib/rest/ipMessaging/v1/service.js"],"names":["Q","require","_","util","ChannelList","Page","RoleList","UserList","deserialize","serialize","values","ServiceList","ServicePage","ServiceInstance","ServiceContext","version","ServiceListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","friendlyName","friendly_name","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","defaultServiceRoleSid","default_service_role_sid","defaultChannelRoleSid","default_channel_role_sid","defaultChannelCreatorRoleSid","default_channel_creator_role_sid","readStatusEnabled","read_status_enabled","reachabilityEnabled","reachability_enabled","typingIndicatorTimeout","integer","typing_indicator_timeout","consumptionReportInterval","consumption_report_interval","webhooks","preWebhookUrl","pre_webhook_url","postWebhookUrl","post_webhook_url","webhookMethod","webhook_method","webhookFilters","webhook_filters","notifications","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","channels","roles","users","_channels","_roles","_users","bool","map","e","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar ChannelList = require('./service/channel').ChannelList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar RoleList = require('./service/role').RoleList;\nvar UserList = require('./service/user').UserList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ServiceList;\nvar ServicePage;\nvar ServiceInstance;\nvar ServiceContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceList\n *\n * @constructor Twilio.IpMessaging.V1.ServiceList\n *\n * @param {Twilio.IpMessaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nServiceList = function ServiceList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function services\n   * @memberof Twilio.IpMessaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.IpMessaging.V1.ServiceContext}\n   */\n  /* jshint ignore:end */\n  function ServiceListInstance(sid) {\n    return ServiceListInstance.get(sid);\n  }\n\n  ServiceListInstance._version = version;\n  // Path Solution\n  ServiceListInstance._solution = {};\n  ServiceListInstance._uri = `/Services`;\n  /* jshint ignore:start */\n  /**\n   * create a ServiceInstance\n   *\n   * @function create\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - The friendly_name\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ServiceInstance\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'FriendlyName': _.get(opts, 'friendlyName')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ServiceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ServiceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a service\n   *\n   * @function get\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.IpMessaging.V1.ServiceContext}\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.get = function get(sid) {\n    return new ServiceContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.IpMessaging.V1.ServiceList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ServiceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ServiceListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ServicePage\n *\n * @constructor Twilio.IpMessaging.V1.ServicePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ServiceSolution} solution - Path solution\n *\n * @returns ServicePage\n */\n/* jshint ignore:end */\nServicePage = function ServicePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ServicePage.prototype, Page.prototype);\nServicePage.prototype.constructor = ServicePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ServiceInstance\n *\n * @function getInstance\n * @memberof Twilio.IpMessaging.V1.ServicePage#\n *\n * @param {ServicePayload} payload - Payload response from the API\n *\n * @returns ServiceInstance\n */\n/* jshint ignore:end */\nServicePage.prototype.getInstance = function getInstance(payload) {\n  return new ServiceInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.IpMessaging.V1.ServicePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServicePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nServicePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceContext\n *\n * @constructor Twilio.IpMessaging.V1.ServiceInstance\n *\n * @property {string} sid - The sid\n * @property {string} accountSid - The account_sid\n * @property {string} friendlyName - The friendly_name\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} defaultServiceRoleSid - The default_service_role_sid\n * @property {string} defaultChannelRoleSid - The default_channel_role_sid\n * @property {string} defaultChannelCreatorRoleSid -\n *          The default_channel_creator_role_sid\n * @property {boolean} readStatusEnabled - The read_status_enabled\n * @property {boolean} reachabilityEnabled - The reachability_enabled\n * @property {number} typingIndicatorTimeout - The typing_indicator_timeout\n * @property {number} consumptionReportInterval - The consumption_report_interval\n * @property {object} limits - The limits\n * @property {object} webhooks - The webhooks\n * @property {string} preWebhookUrl - The pre_webhook_url\n * @property {string} postWebhookUrl - The post_webhook_url\n * @property {string} webhookMethod - The webhook_method\n * @property {string} webhookFilters - The webhook_filters\n * @property {object} notifications - The notifications\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {ServicePayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nServiceInstance = function ServiceInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.defaultServiceRoleSid = payload.default_service_role_sid; // jshint ignore:line\n  this.defaultChannelRoleSid = payload.default_channel_role_sid; // jshint ignore:line\n  this.defaultChannelCreatorRoleSid = payload.default_channel_creator_role_sid; // jshint ignore:line\n  this.readStatusEnabled = payload.read_status_enabled; // jshint ignore:line\n  this.reachabilityEnabled = payload.reachability_enabled; // jshint ignore:line\n  this.typingIndicatorTimeout = deserialize.integer(payload.typing_indicator_timeout); // jshint ignore:line\n  this.consumptionReportInterval = deserialize.integer(payload.consumption_report_interval); // jshint ignore:line\n  this.limits = payload.limits; // jshint ignore:line\n  this.webhooks = payload.webhooks; // jshint ignore:line\n  this.preWebhookUrl = payload.pre_webhook_url; // jshint ignore:line\n  this.postWebhookUrl = payload.post_webhook_url; // jshint ignore:line\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n  this.webhookFilters = payload.webhook_filters; // jshint ignore:line\n  this.notifications = payload.notifications; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(ServiceInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ServiceContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.defaultServiceRoleSid] - The default_service_role_sid\n * @param {string} [opts.defaultChannelRoleSid] - The default_channel_role_sid\n * @param {string} [opts.defaultChannelCreatorRoleSid] -\n *          The default_channel_creator_role_sid\n * @param {boolean} [opts.readStatusEnabled] - The read_status_enabled\n * @param {boolean} [opts.reachabilityEnabled] - The reachability_enabled\n * @param {number} [opts.typingIndicatorTimeout] - The typing_indicator_timeout\n * @param {number} [opts.consumptionReportInterval] -\n *          The consumption_report_interval\n * @param {boolean} [opts.notifications.newMessage.enabled] -\n *          The notifications.new_message.enabled\n * @param {string} [opts.notifications.newMessage.template] -\n *          The notifications.new_message.template\n * @param {boolean} [opts.notifications.addedToChannel.enabled] -\n *          The notifications.added_to_channel.enabled\n * @param {string} [opts.notifications.addedToChannel.template] -\n *          The notifications.added_to_channel.template\n * @param {boolean} [opts.notifications.removedFromChannel.enabled] -\n *          The notifications.removed_from_channel.enabled\n * @param {string} [opts.notifications.removedFromChannel.template] -\n *          The notifications.removed_from_channel.template\n * @param {boolean} [opts.notifications.invitedToChannel.enabled] -\n *          The notifications.invited_to_channel.enabled\n * @param {string} [opts.notifications.invitedToChannel.template] -\n *          The notifications.invited_to_channel.template\n * @param {string} [opts.preWebhookUrl] - The pre_webhook_url\n * @param {string} [opts.postWebhookUrl] - The post_webhook_url\n * @param {string} [opts.webhookMethod] - The webhook_method\n * @param {string|list} [opts.webhookFilters] - The webhook_filters\n * @param {string} [opts.webhooks.onMessageSend.url] -\n *          The webhooks.on_message_send.url\n * @param {string} [opts.webhooks.onMessageSend.method] -\n *          The webhooks.on_message_send.method\n * @param {string} [opts.webhooks.onMessageUpdate.url] -\n *          The webhooks.on_message_update.url\n * @param {string} [opts.webhooks.onMessageUpdate.method] -\n *          The webhooks.on_message_update.method\n * @param {string} [opts.webhooks.onMessageRemove.url] -\n *          The webhooks.on_message_remove.url\n * @param {string} [opts.webhooks.onMessageRemove.method] -\n *          The webhooks.on_message_remove.method\n * @param {string} [opts.webhooks.onChannelAdd.url] -\n *          The webhooks.on_channel_add.url\n * @param {string} [opts.webhooks.onChannelAdd.method] -\n *          The webhooks.on_channel_add.method\n * @param {string} [opts.webhooks.onChannelDestroy.url] -\n *          The webhooks.on_channel_destroy.url\n * @param {string} [opts.webhooks.onChannelDestroy.method] -\n *          The webhooks.on_channel_destroy.method\n * @param {string} [opts.webhooks.onChannelUpdate.url] -\n *          The webhooks.on_channel_update.url\n * @param {string} [opts.webhooks.onChannelUpdate.method] -\n *          The webhooks.on_channel_update.method\n * @param {string} [opts.webhooks.onMemberAdd.url] - The webhooks.on_member_add.url\n * @param {string} [opts.webhooks.onMemberAdd.method] -\n *          The webhooks.on_member_add.method\n * @param {string} [opts.webhooks.onMemberRemove.url] -\n *          The webhooks.on_member_remove.url\n * @param {string} [opts.webhooks.onMemberRemove.method] -\n *          The webhooks.on_member_remove.method\n * @param {string} [opts.webhooks.onMessageSent.url] -\n *          The webhooks.on_message_sent.url\n * @param {string} [opts.webhooks.onMessageSent.method] -\n *          The webhooks.on_message_sent.method\n * @param {string} [opts.webhooks.onMessageUpdated.url] -\n *          The webhooks.on_message_updated.url\n * @param {string} [opts.webhooks.onMessageUpdated.method] -\n *          The webhooks.on_message_updated.method\n * @param {string} [opts.webhooks.onMessageRemoved.url] -\n *          The webhooks.on_message_removed.url\n * @param {string} [opts.webhooks.onMessageRemoved.method] -\n *          The webhooks.on_message_removed.method\n * @param {string} [opts.webhooks.onChannelAdded.url] -\n *          The webhooks.on_channel_added.url\n * @param {string} [opts.webhooks.onChannelAdded.method] -\n *          The webhooks.on_channel_added.method\n * @param {string} [opts.webhooks.onChannelDestroyed.url] -\n *          The webhooks.on_channel_destroyed.url\n * @param {string} [opts.webhooks.onChannelDestroyed.method] -\n *          The webhooks.on_channel_destroyed.method\n * @param {string} [opts.webhooks.onChannelUpdated.url] -\n *          The webhooks.on_channel_updated.url\n * @param {string} [opts.webhooks.onChannelUpdated.method] -\n *          The webhooks.on_channel_updated.method\n * @param {string} [opts.webhooks.onMemberAdded.url] -\n *          The webhooks.on_member_added.url\n * @param {string} [opts.webhooks.onMemberAdded.method] -\n *          The webhooks.on_member_added.method\n * @param {string} [opts.webhooks.onMemberRemoved.url] -\n *          The webhooks.on_member_removed.url\n * @param {string} [opts.webhooks.onMemberRemoved.method] -\n *          The webhooks.on_member_removed.method\n * @param {number} [opts.limits.channelMembers] - The limits.channel_members\n * @param {number} [opts.limits.userChannels] - The limits.user_channels\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the channels\n *\n * @function channels\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns {Twilio.IpMessaging.V1.ServiceContext.ChannelList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.channels = function channels() {\n  return this._proxy.channels;\n};\n\n/* jshint ignore:start */\n/**\n * Access the roles\n *\n * @function roles\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns {Twilio.IpMessaging.V1.ServiceContext.RoleList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.roles = function roles() {\n  return this._proxy.roles;\n};\n\n/* jshint ignore:start */\n/**\n * Access the users\n *\n * @function users\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns {Twilio.IpMessaging.V1.ServiceContext.UserList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.users = function users() {\n  return this._proxy.users;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.IpMessaging.V1.ServiceInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServiceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nServiceInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceContext\n *\n * @constructor Twilio.IpMessaging.V1.ServiceContext\n *\n * @property {Twilio.IpMessaging.V1.ServiceContext.ChannelList} channels -\n *          channels resource\n * @property {Twilio.IpMessaging.V1.ServiceContext.RoleList} roles - roles resource\n * @property {Twilio.IpMessaging.V1.ServiceContext.UserList} users - users resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nServiceContext = function ServiceContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Services/${sid}`;\n\n  // Dependents\n  this._channels = undefined;\n  this._roles = undefined;\n  this._users = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.defaultServiceRoleSid] - The default_service_role_sid\n * @param {string} [opts.defaultChannelRoleSid] - The default_channel_role_sid\n * @param {string} [opts.defaultChannelCreatorRoleSid] -\n *          The default_channel_creator_role_sid\n * @param {boolean} [opts.readStatusEnabled] - The read_status_enabled\n * @param {boolean} [opts.reachabilityEnabled] - The reachability_enabled\n * @param {number} [opts.typingIndicatorTimeout] - The typing_indicator_timeout\n * @param {number} [opts.consumptionReportInterval] -\n *          The consumption_report_interval\n * @param {boolean} [opts.notifications.newMessage.enabled] -\n *          The notifications.new_message.enabled\n * @param {string} [opts.notifications.newMessage.template] -\n *          The notifications.new_message.template\n * @param {boolean} [opts.notifications.addedToChannel.enabled] -\n *          The notifications.added_to_channel.enabled\n * @param {string} [opts.notifications.addedToChannel.template] -\n *          The notifications.added_to_channel.template\n * @param {boolean} [opts.notifications.removedFromChannel.enabled] -\n *          The notifications.removed_from_channel.enabled\n * @param {string} [opts.notifications.removedFromChannel.template] -\n *          The notifications.removed_from_channel.template\n * @param {boolean} [opts.notifications.invitedToChannel.enabled] -\n *          The notifications.invited_to_channel.enabled\n * @param {string} [opts.notifications.invitedToChannel.template] -\n *          The notifications.invited_to_channel.template\n * @param {string} [opts.preWebhookUrl] - The pre_webhook_url\n * @param {string} [opts.postWebhookUrl] - The post_webhook_url\n * @param {string} [opts.webhookMethod] - The webhook_method\n * @param {string|list} [opts.webhookFilters] - The webhook_filters\n * @param {string} [opts.webhooks.onMessageSend.url] -\n *          The webhooks.on_message_send.url\n * @param {string} [opts.webhooks.onMessageSend.method] -\n *          The webhooks.on_message_send.method\n * @param {string} [opts.webhooks.onMessageUpdate.url] -\n *          The webhooks.on_message_update.url\n * @param {string} [opts.webhooks.onMessageUpdate.method] -\n *          The webhooks.on_message_update.method\n * @param {string} [opts.webhooks.onMessageRemove.url] -\n *          The webhooks.on_message_remove.url\n * @param {string} [opts.webhooks.onMessageRemove.method] -\n *          The webhooks.on_message_remove.method\n * @param {string} [opts.webhooks.onChannelAdd.url] -\n *          The webhooks.on_channel_add.url\n * @param {string} [opts.webhooks.onChannelAdd.method] -\n *          The webhooks.on_channel_add.method\n * @param {string} [opts.webhooks.onChannelDestroy.url] -\n *          The webhooks.on_channel_destroy.url\n * @param {string} [opts.webhooks.onChannelDestroy.method] -\n *          The webhooks.on_channel_destroy.method\n * @param {string} [opts.webhooks.onChannelUpdate.url] -\n *          The webhooks.on_channel_update.url\n * @param {string} [opts.webhooks.onChannelUpdate.method] -\n *          The webhooks.on_channel_update.method\n * @param {string} [opts.webhooks.onMemberAdd.url] - The webhooks.on_member_add.url\n * @param {string} [opts.webhooks.onMemberAdd.method] -\n *          The webhooks.on_member_add.method\n * @param {string} [opts.webhooks.onMemberRemove.url] -\n *          The webhooks.on_member_remove.url\n * @param {string} [opts.webhooks.onMemberRemove.method] -\n *          The webhooks.on_member_remove.method\n * @param {string} [opts.webhooks.onMessageSent.url] -\n *          The webhooks.on_message_sent.url\n * @param {string} [opts.webhooks.onMessageSent.method] -\n *          The webhooks.on_message_sent.method\n * @param {string} [opts.webhooks.onMessageUpdated.url] -\n *          The webhooks.on_message_updated.url\n * @param {string} [opts.webhooks.onMessageUpdated.method] -\n *          The webhooks.on_message_updated.method\n * @param {string} [opts.webhooks.onMessageRemoved.url] -\n *          The webhooks.on_message_removed.url\n * @param {string} [opts.webhooks.onMessageRemoved.method] -\n *          The webhooks.on_message_removed.method\n * @param {string} [opts.webhooks.onChannelAdded.url] -\n *          The webhooks.on_channel_added.url\n * @param {string} [opts.webhooks.onChannelAdded.method] -\n *          The webhooks.on_channel_added.method\n * @param {string} [opts.webhooks.onChannelDestroyed.url] -\n *          The webhooks.on_channel_destroyed.url\n * @param {string} [opts.webhooks.onChannelDestroyed.method] -\n *          The webhooks.on_channel_destroyed.method\n * @param {string} [opts.webhooks.onChannelUpdated.url] -\n *          The webhooks.on_channel_updated.url\n * @param {string} [opts.webhooks.onChannelUpdated.method] -\n *          The webhooks.on_channel_updated.method\n * @param {string} [opts.webhooks.onMemberAdded.url] -\n *          The webhooks.on_member_added.url\n * @param {string} [opts.webhooks.onMemberAdded.method] -\n *          The webhooks.on_member_added.method\n * @param {string} [opts.webhooks.onMemberRemoved.url] -\n *          The webhooks.on_member_removed.url\n * @param {string} [opts.webhooks.onMemberRemoved.method] -\n *          The webhooks.on_member_removed.method\n * @param {number} [opts.limits.channelMembers] - The limits.channel_members\n * @param {number} [opts.limits.userChannels] - The limits.user_channels\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'DefaultServiceRoleSid': _.get(opts, 'defaultServiceRoleSid'),\n    'DefaultChannelRoleSid': _.get(opts, 'defaultChannelRoleSid'),\n    'DefaultChannelCreatorRoleSid': _.get(opts, 'defaultChannelCreatorRoleSid'),\n    'ReadStatusEnabled': serialize.bool(_.get(opts, 'readStatusEnabled')),\n    'ReachabilityEnabled': serialize.bool(_.get(opts, 'reachabilityEnabled')),\n    'TypingIndicatorTimeout': _.get(opts, 'typingIndicatorTimeout'),\n    'ConsumptionReportInterval': _.get(opts, 'consumptionReportInterval'),\n    'Notifications.NewMessage.Enabled': serialize.bool(_.get(opts, 'notifications.newMessage.enabled')),\n    'Notifications.NewMessage.Template': _.get(opts, 'notifications.newMessage.template'),\n    'Notifications.AddedToChannel.Enabled': serialize.bool(_.get(opts, 'notifications.addedToChannel.enabled')),\n    'Notifications.AddedToChannel.Template': _.get(opts, 'notifications.addedToChannel.template'),\n    'Notifications.RemovedFromChannel.Enabled': serialize.bool(_.get(opts, 'notifications.removedFromChannel.enabled')),\n    'Notifications.RemovedFromChannel.Template': _.get(opts, 'notifications.removedFromChannel.template'),\n    'Notifications.InvitedToChannel.Enabled': serialize.bool(_.get(opts, 'notifications.invitedToChannel.enabled')),\n    'Notifications.InvitedToChannel.Template': _.get(opts, 'notifications.invitedToChannel.template'),\n    'PreWebhookUrl': _.get(opts, 'preWebhookUrl'),\n    'PostWebhookUrl': _.get(opts, 'postWebhookUrl'),\n    'WebhookMethod': _.get(opts, 'webhookMethod'),\n    'WebhookFilters': serialize.map(_.get(opts, 'webhookFilters'), function(e) { return e; }),\n    'Webhooks.OnMessageSend.Url': _.get(opts, 'webhooks.onMessageSend.url'),\n    'Webhooks.OnMessageSend.Method': _.get(opts, 'webhooks.onMessageSend.method'),\n    'Webhooks.OnMessageUpdate.Url': _.get(opts, 'webhooks.onMessageUpdate.url'),\n    'Webhooks.OnMessageUpdate.Method': _.get(opts, 'webhooks.onMessageUpdate.method'),\n    'Webhooks.OnMessageRemove.Url': _.get(opts, 'webhooks.onMessageRemove.url'),\n    'Webhooks.OnMessageRemove.Method': _.get(opts, 'webhooks.onMessageRemove.method'),\n    'Webhooks.OnChannelAdd.Url': _.get(opts, 'webhooks.onChannelAdd.url'),\n    'Webhooks.OnChannelAdd.Method': _.get(opts, 'webhooks.onChannelAdd.method'),\n    'Webhooks.OnChannelDestroy.Url': _.get(opts, 'webhooks.onChannelDestroy.url'),\n    'Webhooks.OnChannelDestroy.Method': _.get(opts, 'webhooks.onChannelDestroy.method'),\n    'Webhooks.OnChannelUpdate.Url': _.get(opts, 'webhooks.onChannelUpdate.url'),\n    'Webhooks.OnChannelUpdate.Method': _.get(opts, 'webhooks.onChannelUpdate.method'),\n    'Webhooks.OnMemberAdd.Url': _.get(opts, 'webhooks.onMemberAdd.url'),\n    'Webhooks.OnMemberAdd.Method': _.get(opts, 'webhooks.onMemberAdd.method'),\n    'Webhooks.OnMemberRemove.Url': _.get(opts, 'webhooks.onMemberRemove.url'),\n    'Webhooks.OnMemberRemove.Method': _.get(opts, 'webhooks.onMemberRemove.method'),\n    'Webhooks.OnMessageSent.Url': _.get(opts, 'webhooks.onMessageSent.url'),\n    'Webhooks.OnMessageSent.Method': _.get(opts, 'webhooks.onMessageSent.method'),\n    'Webhooks.OnMessageUpdated.Url': _.get(opts, 'webhooks.onMessageUpdated.url'),\n    'Webhooks.OnMessageUpdated.Method': _.get(opts, 'webhooks.onMessageUpdated.method'),\n    'Webhooks.OnMessageRemoved.Url': _.get(opts, 'webhooks.onMessageRemoved.url'),\n    'Webhooks.OnMessageRemoved.Method': _.get(opts, 'webhooks.onMessageRemoved.method'),\n    'Webhooks.OnChannelAdded.Url': _.get(opts, 'webhooks.onChannelAdded.url'),\n    'Webhooks.OnChannelAdded.Method': _.get(opts, 'webhooks.onChannelAdded.method'),\n    'Webhooks.OnChannelDestroyed.Url': _.get(opts, 'webhooks.onChannelDestroyed.url'),\n    'Webhooks.OnChannelDestroyed.Method': _.get(opts, 'webhooks.onChannelDestroyed.method'),\n    'Webhooks.OnChannelUpdated.Url': _.get(opts, 'webhooks.onChannelUpdated.url'),\n    'Webhooks.OnChannelUpdated.Method': _.get(opts, 'webhooks.onChannelUpdated.method'),\n    'Webhooks.OnMemberAdded.Url': _.get(opts, 'webhooks.onMemberAdded.url'),\n    'Webhooks.OnMemberAdded.Method': _.get(opts, 'webhooks.onMemberAdded.method'),\n    'Webhooks.OnMemberRemoved.Url': _.get(opts, 'webhooks.onMemberRemoved.url'),\n    'Webhooks.OnMemberRemoved.Method': _.get(opts, 'webhooks.onMemberRemoved.method'),\n    'Limits.ChannelMembers': _.get(opts, 'limits.channelMembers'),\n    'Limits.UserChannels': _.get(opts, 'limits.userChannels')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(ServiceContext.prototype,\n  'channels', {\n    get: function() {\n      if (!this._channels) {\n        this._channels = new ChannelList(this._version, this._solution.sid);\n      }\n      return this._channels;\n    }\n});\n\nObject.defineProperty(ServiceContext.prototype,\n  'roles', {\n    get: function() {\n      if (!this._roles) {\n        this._roles = new RoleList(this._version, this._solution.sid);\n      }\n      return this._roles;\n    }\n});\n\nObject.defineProperty(ServiceContext.prototype,\n  'users', {\n    get: function() {\n      if (!this._users) {\n        this._users = new UserList(this._version, this._solution.sid);\n      }\n      return this._users;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.IpMessaging.V1.ServiceContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServiceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nServiceContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ServiceList: ServiceList,\n  ServicePage: ServicePage,\n  ServiceInstance: ServiceInstance,\n  ServiceContext: ServiceContext\n};\n"]},"metadata":{},"sourceType":"script"}