{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar CallSummariesList;\nvar CallSummariesPage;\nvar CallSummariesInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the CallSummariesList\n *\n * @constructor Twilio.Insights.V1.CallSummariesList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nCallSummariesList = function CallSummariesList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function callSummaries\n   * @memberof Twilio.Insights.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.CallSummariesContext}\n   */\n\n  /* jshint ignore:end */\n  function CallSummariesListInstance(sid) {\n    return CallSummariesListInstance.get(sid);\n  }\n\n  CallSummariesListInstance._version = version; // Path Solution\n\n  CallSummariesListInstance._solution = {};\n  CallSummariesListInstance._uri = `/Voice/Summaries`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams CallSummariesInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.from] - The from\n   * @param {string} [opts.to] - The to\n   * @param {string} [opts.fromCarrier] - The from_carrier\n   * @param {string} [opts.toCarrier] - The to_carrier\n   * @param {string} [opts.fromCountryCode] - The from_country_code\n   * @param {string} [opts.toCountryCode] - The to_country_code\n   * @param {boolean} [opts.branded] - The branded\n   * @param {boolean} [opts.verifiedCaller] - The verified_caller\n   * @param {boolean} [opts.hasTag] - The has_tag\n   * @param {string} [opts.startTime] - The start_time\n   * @param {string} [opts.endTime] - The end_time\n   * @param {string} [opts.callType] - The call_type\n   * @param {string} [opts.callState] - The call_state\n   * @param {string} [opts.direction] - The direction\n   * @param {call_summaries.processing_state_request} [opts.processingState] -\n   *          The processing_state\n   * @param {call_summaries.sort_by} [opts.sortBy] - The sort_by\n   * @param {string} [opts.subaccount] - The subaccount\n   * @param {boolean} [opts.abnormalSession] - The abnormal_session\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  CallSummariesListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists CallSummariesInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.from] - The from\n   * @param {string} [opts.to] - The to\n   * @param {string} [opts.fromCarrier] - The from_carrier\n   * @param {string} [opts.toCarrier] - The to_carrier\n   * @param {string} [opts.fromCountryCode] - The from_country_code\n   * @param {string} [opts.toCountryCode] - The to_country_code\n   * @param {boolean} [opts.branded] - The branded\n   * @param {boolean} [opts.verifiedCaller] - The verified_caller\n   * @param {boolean} [opts.hasTag] - The has_tag\n   * @param {string} [opts.startTime] - The start_time\n   * @param {string} [opts.endTime] - The end_time\n   * @param {string} [opts.callType] - The call_type\n   * @param {string} [opts.callState] - The call_state\n   * @param {string} [opts.direction] - The direction\n   * @param {call_summaries.processing_state_request} [opts.processingState] -\n   *          The processing_state\n   * @param {call_summaries.sort_by} [opts.sortBy] - The sort_by\n   * @param {string} [opts.subaccount] - The subaccount\n   * @param {boolean} [opts.abnormalSession] - The abnormal_session\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CallSummariesListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of CallSummariesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.from] - The from\n   * @param {string} [opts.to] - The to\n   * @param {string} [opts.fromCarrier] - The from_carrier\n   * @param {string} [opts.toCarrier] - The to_carrier\n   * @param {string} [opts.fromCountryCode] - The from_country_code\n   * @param {string} [opts.toCountryCode] - The to_country_code\n   * @param {boolean} [opts.branded] - The branded\n   * @param {boolean} [opts.verifiedCaller] - The verified_caller\n   * @param {boolean} [opts.hasTag] - The has_tag\n   * @param {string} [opts.startTime] - The start_time\n   * @param {string} [opts.endTime] - The end_time\n   * @param {string} [opts.callType] - The call_type\n   * @param {string} [opts.callState] - The call_state\n   * @param {string} [opts.direction] - The direction\n   * @param {call_summaries.processing_state_request} [opts.processingState] -\n   *          The processing_state\n   * @param {call_summaries.sort_by} [opts.sortBy] - The sort_by\n   * @param {string} [opts.subaccount] - The subaccount\n   * @param {boolean} [opts.abnormalSession] - The abnormal_session\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CallSummariesListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'From': _.get(opts, 'from'),\n      'To': _.get(opts, 'to'),\n      'FromCarrier': _.get(opts, 'fromCarrier'),\n      'ToCarrier': _.get(opts, 'toCarrier'),\n      'FromCountryCode': _.get(opts, 'fromCountryCode'),\n      'ToCountryCode': _.get(opts, 'toCountryCode'),\n      'Branded': serialize.bool(_.get(opts, 'branded')),\n      'VerifiedCaller': serialize.bool(_.get(opts, 'verifiedCaller')),\n      'HasTag': serialize.bool(_.get(opts, 'hasTag')),\n      'StartTime': _.get(opts, 'startTime'),\n      'EndTime': _.get(opts, 'endTime'),\n      'CallType': _.get(opts, 'callType'),\n      'CallState': _.get(opts, 'callState'),\n      'Direction': _.get(opts, 'direction'),\n      'ProcessingState': _.get(opts, 'processingState'),\n      'SortBy': _.get(opts, 'sortBy'),\n      'Subaccount': _.get(opts, 'subaccount'),\n      'AbnormalSession': serialize.bool(_.get(opts, 'abnormalSession')),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CallSummariesPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of CallSummariesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CallSummariesListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CallSummariesPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  CallSummariesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CallSummariesListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CallSummariesListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CallSummariesPage\n *\n * @constructor Twilio.Insights.V1.CallSummariesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CallSummariesSolution} solution - Path solution\n *\n * @returns CallSummariesPage\n */\n\n/* jshint ignore:end */\n\n\nCallSummariesPage = function CallSummariesPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CallSummariesPage.prototype, Page.prototype);\n\nCallSummariesPage.prototype.constructor = CallSummariesPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of CallSummariesInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.CallSummariesPage#\n *\n * @param {CallSummariesPayload} payload - Payload response from the API\n *\n * @returns CallSummariesInstance\n */\n\n/* jshint ignore:end */\n\nCallSummariesPage.prototype.getInstance = function getInstance(payload) {\n  return new CallSummariesInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallSummariesPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCallSummariesPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCallSummariesPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CallSummariesContext\n *\n * @constructor Twilio.Insights.V1.CallSummariesInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} callSid - The call_sid\n * @property {call_summaries.call_type} callType - The call_type\n * @property {call_summaries.call_state} callState - The call_state\n * @property {call_summaries.processing_state} processingState -\n *          The processing_state\n * @property {Date} createdTime - The created_time\n * @property {Date} startTime - The start_time\n * @property {Date} endTime - The end_time\n * @property {number} duration - The duration\n * @property {number} connectDuration - The connect_duration\n * @property {object} from - The from\n * @property {object} to - The to\n * @property {object} carrierEdge - The carrier_edge\n * @property {object} clientEdge - The client_edge\n * @property {object} sdkEdge - The sdk_edge\n * @property {object} sipEdge - The sip_edge\n * @property {string} tags - The tags\n * @property {string} url - The url\n * @property {object} attributes - The attributes\n * @property {object} properties - The properties\n * @property {object} trust - The trust\n *\n * @param {V1} version - Version of the resource\n * @param {CallSummariesPayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nCallSummariesInstance = function CallSummariesInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.callSid = payload.call_sid; // jshint ignore:line\n\n  this.callType = payload.call_type; // jshint ignore:line\n\n  this.callState = payload.call_state; // jshint ignore:line\n\n  this.processingState = payload.processing_state; // jshint ignore:line\n\n  this.createdTime = deserialize.iso8601DateTime(payload.created_time); // jshint ignore:line\n\n  this.startTime = deserialize.iso8601DateTime(payload.start_time); // jshint ignore:line\n\n  this.endTime = deserialize.iso8601DateTime(payload.end_time); // jshint ignore:line\n\n  this.duration = deserialize.integer(payload.duration); // jshint ignore:line\n\n  this.connectDuration = deserialize.integer(payload.connect_duration); // jshint ignore:line\n\n  this.from = payload.from; // jshint ignore:line\n\n  this.to = payload.to; // jshint ignore:line\n\n  this.carrierEdge = payload.carrier_edge; // jshint ignore:line\n\n  this.clientEdge = payload.client_edge; // jshint ignore:line\n\n  this.sdkEdge = payload.sdk_edge; // jshint ignore:line\n\n  this.sipEdge = payload.sip_edge; // jshint ignore:line\n\n  this.tags = payload.tags; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.attributes = payload.attributes; // jshint ignore:line\n\n  this.properties = payload.properties; // jshint ignore:line\n\n  this.trust = payload.trust; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallSummariesInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCallSummariesInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCallSummariesInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CallSummariesList: CallSummariesList,\n  CallSummariesPage: CallSummariesPage,\n  CallSummariesInstance: CallSummariesInstance\n};","map":{"version":3,"sources":["/Users/vivianjacobitz/Desktop/KeithQuotes/keith-quotes-webapp/node_modules/twilio/lib/rest/insights/v1/callSummaries.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","CallSummariesList","CallSummariesPage","CallSummariesInstance","version","CallSummariesListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","bool","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","callSid","call_sid","callType","call_type","callState","call_state","processingState","processing_state","createdTime","iso8601DateTime","created_time","startTime","start_time","endTime","end_time","duration","integer","connectDuration","connect_duration","from","to","carrierEdge","carrier_edge","clientEdge","client_edge","sdkEdge","sdk_edge","sipEdge","sip_edge","tags","url","attributes","properties","trust","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar CallSummariesList;\nvar CallSummariesPage;\nvar CallSummariesInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the CallSummariesList\n *\n * @constructor Twilio.Insights.V1.CallSummariesList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nCallSummariesList = function CallSummariesList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function callSummaries\n   * @memberof Twilio.Insights.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.CallSummariesContext}\n   */\n  /* jshint ignore:end */\n  function CallSummariesListInstance(sid) {\n    return CallSummariesListInstance.get(sid);\n  }\n\n  CallSummariesListInstance._version = version;\n  // Path Solution\n  CallSummariesListInstance._solution = {};\n  CallSummariesListInstance._uri = `/Voice/Summaries`;\n  /* jshint ignore:start */\n  /**\n   * Streams CallSummariesInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.from] - The from\n   * @param {string} [opts.to] - The to\n   * @param {string} [opts.fromCarrier] - The from_carrier\n   * @param {string} [opts.toCarrier] - The to_carrier\n   * @param {string} [opts.fromCountryCode] - The from_country_code\n   * @param {string} [opts.toCountryCode] - The to_country_code\n   * @param {boolean} [opts.branded] - The branded\n   * @param {boolean} [opts.verifiedCaller] - The verified_caller\n   * @param {boolean} [opts.hasTag] - The has_tag\n   * @param {string} [opts.startTime] - The start_time\n   * @param {string} [opts.endTime] - The end_time\n   * @param {string} [opts.callType] - The call_type\n   * @param {string} [opts.callState] - The call_state\n   * @param {string} [opts.direction] - The direction\n   * @param {call_summaries.processing_state_request} [opts.processingState] -\n   *          The processing_state\n   * @param {call_summaries.sort_by} [opts.sortBy] - The sort_by\n   * @param {string} [opts.subaccount] - The subaccount\n   * @param {boolean} [opts.abnormalSession] - The abnormal_session\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  CallSummariesListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists CallSummariesInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.from] - The from\n   * @param {string} [opts.to] - The to\n   * @param {string} [opts.fromCarrier] - The from_carrier\n   * @param {string} [opts.toCarrier] - The to_carrier\n   * @param {string} [opts.fromCountryCode] - The from_country_code\n   * @param {string} [opts.toCountryCode] - The to_country_code\n   * @param {boolean} [opts.branded] - The branded\n   * @param {boolean} [opts.verifiedCaller] - The verified_caller\n   * @param {boolean} [opts.hasTag] - The has_tag\n   * @param {string} [opts.startTime] - The start_time\n   * @param {string} [opts.endTime] - The end_time\n   * @param {string} [opts.callType] - The call_type\n   * @param {string} [opts.callState] - The call_state\n   * @param {string} [opts.direction] - The direction\n   * @param {call_summaries.processing_state_request} [opts.processingState] -\n   *          The processing_state\n   * @param {call_summaries.sort_by} [opts.sortBy] - The sort_by\n   * @param {string} [opts.subaccount] - The subaccount\n   * @param {boolean} [opts.abnormalSession] - The abnormal_session\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CallSummariesListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of CallSummariesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.from] - The from\n   * @param {string} [opts.to] - The to\n   * @param {string} [opts.fromCarrier] - The from_carrier\n   * @param {string} [opts.toCarrier] - The to_carrier\n   * @param {string} [opts.fromCountryCode] - The from_country_code\n   * @param {string} [opts.toCountryCode] - The to_country_code\n   * @param {boolean} [opts.branded] - The branded\n   * @param {boolean} [opts.verifiedCaller] - The verified_caller\n   * @param {boolean} [opts.hasTag] - The has_tag\n   * @param {string} [opts.startTime] - The start_time\n   * @param {string} [opts.endTime] - The end_time\n   * @param {string} [opts.callType] - The call_type\n   * @param {string} [opts.callState] - The call_state\n   * @param {string} [opts.direction] - The direction\n   * @param {call_summaries.processing_state_request} [opts.processingState] -\n   *          The processing_state\n   * @param {call_summaries.sort_by} [opts.sortBy] - The sort_by\n   * @param {string} [opts.subaccount] - The subaccount\n   * @param {boolean} [opts.abnormalSession] - The abnormal_session\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CallSummariesListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'From': _.get(opts, 'from'),\n      'To': _.get(opts, 'to'),\n      'FromCarrier': _.get(opts, 'fromCarrier'),\n      'ToCarrier': _.get(opts, 'toCarrier'),\n      'FromCountryCode': _.get(opts, 'fromCountryCode'),\n      'ToCountryCode': _.get(opts, 'toCountryCode'),\n      'Branded': serialize.bool(_.get(opts, 'branded')),\n      'VerifiedCaller': serialize.bool(_.get(opts, 'verifiedCaller')),\n      'HasTag': serialize.bool(_.get(opts, 'hasTag')),\n      'StartTime': _.get(opts, 'startTime'),\n      'EndTime': _.get(opts, 'endTime'),\n      'CallType': _.get(opts, 'callType'),\n      'CallState': _.get(opts, 'callState'),\n      'Direction': _.get(opts, 'direction'),\n      'ProcessingState': _.get(opts, 'processingState'),\n      'SortBy': _.get(opts, 'sortBy'),\n      'Subaccount': _.get(opts, 'subaccount'),\n      'AbnormalSession': serialize.bool(_.get(opts, 'abnormalSession')),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CallSummariesPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of CallSummariesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CallSummariesListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CallSummariesPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.CallSummariesList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  CallSummariesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CallSummariesListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CallSummariesListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CallSummariesPage\n *\n * @constructor Twilio.Insights.V1.CallSummariesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CallSummariesSolution} solution - Path solution\n *\n * @returns CallSummariesPage\n */\n/* jshint ignore:end */\nCallSummariesPage = function CallSummariesPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CallSummariesPage.prototype, Page.prototype);\nCallSummariesPage.prototype.constructor = CallSummariesPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of CallSummariesInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.CallSummariesPage#\n *\n * @param {CallSummariesPayload} payload - Payload response from the API\n *\n * @returns CallSummariesInstance\n */\n/* jshint ignore:end */\nCallSummariesPage.prototype.getInstance = function getInstance(payload) {\n  return new CallSummariesInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallSummariesPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCallSummariesPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCallSummariesPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CallSummariesContext\n *\n * @constructor Twilio.Insights.V1.CallSummariesInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} callSid - The call_sid\n * @property {call_summaries.call_type} callType - The call_type\n * @property {call_summaries.call_state} callState - The call_state\n * @property {call_summaries.processing_state} processingState -\n *          The processing_state\n * @property {Date} createdTime - The created_time\n * @property {Date} startTime - The start_time\n * @property {Date} endTime - The end_time\n * @property {number} duration - The duration\n * @property {number} connectDuration - The connect_duration\n * @property {object} from - The from\n * @property {object} to - The to\n * @property {object} carrierEdge - The carrier_edge\n * @property {object} clientEdge - The client_edge\n * @property {object} sdkEdge - The sdk_edge\n * @property {object} sipEdge - The sip_edge\n * @property {string} tags - The tags\n * @property {string} url - The url\n * @property {object} attributes - The attributes\n * @property {object} properties - The properties\n * @property {object} trust - The trust\n *\n * @param {V1} version - Version of the resource\n * @param {CallSummariesPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nCallSummariesInstance = function CallSummariesInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callSid = payload.call_sid; // jshint ignore:line\n  this.callType = payload.call_type; // jshint ignore:line\n  this.callState = payload.call_state; // jshint ignore:line\n  this.processingState = payload.processing_state; // jshint ignore:line\n  this.createdTime = deserialize.iso8601DateTime(payload.created_time); // jshint ignore:line\n  this.startTime = deserialize.iso8601DateTime(payload.start_time); // jshint ignore:line\n  this.endTime = deserialize.iso8601DateTime(payload.end_time); // jshint ignore:line\n  this.duration = deserialize.integer(payload.duration); // jshint ignore:line\n  this.connectDuration = deserialize.integer(payload.connect_duration); // jshint ignore:line\n  this.from = payload.from; // jshint ignore:line\n  this.to = payload.to; // jshint ignore:line\n  this.carrierEdge = payload.carrier_edge; // jshint ignore:line\n  this.clientEdge = payload.client_edge; // jshint ignore:line\n  this.sdkEdge = payload.sdk_edge; // jshint ignore:line\n  this.sipEdge = payload.sip_edge; // jshint ignore:line\n  this.tags = payload.tags; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.attributes = payload.attributes; // jshint ignore:line\n  this.properties = payload.properties; // jshint ignore:line\n  this.trust = payload.trust; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallSummariesInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCallSummariesInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCallSummariesInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CallSummariesList: CallSummariesList,\n  CallSummariesPage: CallSummariesPage,\n  CallSummariesInstance: CallSummariesInstance\n};\n"]},"metadata":{},"sourceType":"script"}