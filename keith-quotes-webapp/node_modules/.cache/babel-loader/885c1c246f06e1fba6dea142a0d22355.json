{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar ChannelList;\nvar ChannelPage;\nvar ChannelInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n * @param {string} brandedChannelSid - Branded Channel Sid.\n */\n\n/* jshint ignore:end */\n\nChannelList = function ChannelList(version, brandedChannelSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function channels\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelContext}\n   */\n\n  /* jshint ignore:end */\n  function ChannelListInstance(sid) {\n    return ChannelListInstance.get(sid);\n  }\n\n  ChannelListInstance._version = version; // Path Solution\n\n  ChannelListInstance._solution = {\n    brandedChannelSid: brandedChannelSid\n  };\n  ChannelListInstance._uri = `/BrandedChannels/${brandedChannelSid}/Channels`;\n  /* jshint ignore:start */\n\n  /**\n   * create a ChannelInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumberSid - Phone Number Sid to be branded.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ChannelInstance\n   */\n\n  /* jshint ignore:end */\n\n  ChannelListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['phoneNumberSid'])) {\n      throw new Error('Required parameter \"opts[\\'phoneNumberSid\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumberSid': _.get(opts, 'phoneNumberSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ChannelInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ChannelListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ChannelListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ChannelSolution} solution - Path solution\n *\n * @returns ChannelPage\n */\n\n/* jshint ignore:end */\n\n\nChannelPage = function ChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ChannelPage.prototype, Page.prototype);\n\nChannelPage.prototype.constructor = ChannelPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelPage#\n *\n * @param {ChannelPayload} payload - Payload response from the API\n *\n * @returns ChannelInstance\n */\n\n/* jshint ignore:end */\n\nChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new ChannelInstance(this._version, payload, this._solution.brandedChannelSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nChannelPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} brandSid - Brand Sid.\n * @property {string} brandedChannelSid - Branded Channel Sid.\n * @property {string} phoneNumberSid - Phone Number Sid to be branded.\n * @property {string} phoneNumber - Twilio number to assign to the Branded Channel\n * @property {string} url - The URL of this resource.\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {ChannelPayload} payload - The instance payload\n * @param {sid} brandedChannelSid - Branded Channel Sid.\n */\n\n/* jshint ignore:end */\n\n\nChannelInstance = function ChannelInstance(version, payload, brandedChannelSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.businessSid = payload.business_sid; // jshint ignore:line\n\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n\n  this.brandedChannelSid = payload.branded_channel_sid; // jshint ignore:line\n\n  this.phoneNumberSid = payload.phone_number_sid; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    brandedChannelSid: brandedChannelSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nChannelInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ChannelList: ChannelList,\n  ChannelPage: ChannelPage,\n  ChannelInstance: ChannelInstance\n};","map":{"version":3,"sources":["/Users/vivianjacobitz/Desktop/KeithQuotes/keith-quotes-webapp/node_modules/twilio/lib/rest/preview/trusted_comms/brandedChannel/channel.js"],"names":["Q","require","_","util","Page","values","ChannelList","ChannelPage","ChannelInstance","version","brandedChannelSid","ChannelListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","businessSid","business_sid","brandSid","brand_sid","branded_channel_sid","phoneNumberSid","phone_number_sid","phoneNumber","phone_number","url","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar ChannelList;\nvar ChannelPage;\nvar ChannelInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n * @param {string} brandedChannelSid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nChannelList = function ChannelList(version, brandedChannelSid) {\n  /* jshint ignore:start */\n  /**\n   * @function channels\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelContext}\n   */\n  /* jshint ignore:end */\n  function ChannelListInstance(sid) {\n    return ChannelListInstance.get(sid);\n  }\n\n  ChannelListInstance._version = version;\n  // Path Solution\n  ChannelListInstance._solution = {brandedChannelSid: brandedChannelSid};\n  ChannelListInstance._uri = `/BrandedChannels/${brandedChannelSid}/Channels`;\n  /* jshint ignore:start */\n  /**\n   * create a ChannelInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumberSid - Phone Number Sid to be branded.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ChannelInstance\n   */\n  /* jshint ignore:end */\n  ChannelListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['phoneNumberSid'])) {\n      throw new Error('Required parameter \"opts[\\'phoneNumberSid\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'PhoneNumberSid': _.get(opts, 'phoneNumberSid')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ChannelInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ChannelListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ChannelListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ChannelSolution} solution - Path solution\n *\n * @returns ChannelPage\n */\n/* jshint ignore:end */\nChannelPage = function ChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ChannelPage.prototype, Page.prototype);\nChannelPage.prototype.constructor = ChannelPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelPage#\n *\n * @param {ChannelPayload} payload - Payload response from the API\n *\n * @returns ChannelInstance\n */\n/* jshint ignore:end */\nChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new ChannelInstance(this._version, payload, this._solution.brandedChannelSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nChannelPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} brandSid - Brand Sid.\n * @property {string} brandedChannelSid - Branded Channel Sid.\n * @property {string} phoneNumberSid - Phone Number Sid to be branded.\n * @property {string} phoneNumber - Twilio number to assign to the Branded Channel\n * @property {string} url - The URL of this resource.\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {ChannelPayload} payload - The instance payload\n * @param {sid} brandedChannelSid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nChannelInstance = function ChannelInstance(version, payload, brandedChannelSid)\n                                            {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.businessSid = payload.business_sid; // jshint ignore:line\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n  this.brandedChannelSid = payload.branded_channel_sid; // jshint ignore:line\n  this.phoneNumberSid = payload.phone_number_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {brandedChannelSid: brandedChannelSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nChannelInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ChannelList: ChannelList,\n  ChannelPage: ChannelPage,\n  ChannelInstance: ChannelInstance\n};\n"]},"metadata":{},"sourceType":"script"}